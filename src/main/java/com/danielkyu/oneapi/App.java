/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.danielkyu.oneapi;

import com.danielkyu.oneapi.params.MovieParams;
import com.danielkyu.oneapi.params.MovieParams.MovieAttribute;
import com.danielkyu.oneapi.responses.MovieResponse;

/** A sample demo Java class that shows how to use the OneApi Java SDK to get movie data. */
public class App {
  public static void main(String[] args) throws InterruptedException {
    OneApi oneApi = new OneApi();

    // Infinite loop of network calls.
    while (true) {
      getMoviesSync(oneApi);
      Thread.sleep(3000);

      getMoviesAsync(oneApi);
      Thread.sleep(3000);
    }
  }

  /**
   * Makes a synchronous call to get movie data.
   *
   * @param oneApi The OneApi instance that will be used to fetch movie data.
   */
  public static void getMoviesSync(OneApi oneApi) {
    System.out.println("***** ENTRY: Synchronous invocation *****");

    MovieResponse response =
        oneApi.getMovies(
            new MovieParams().withAttributeEquals(MovieAttribute.ID, "5cd95395de30eff6ebccde56"));

    System.out.println(response.getMovies().get(0).getName());
    System.out.println("***** EXIT: Synchronous invocation *****");
  }

  /**
   * Makes an asynchronous call to get movie data.
   *
   * @param oneApi The OneApi instance that will be used to fetch movie data.
   */
  public static void getMoviesAsync(OneApi oneApi) {
    System.out.println("***** ENTRY: Asynchronous invocation *****");

    oneApi.getMovies(
        new MovieParams()
            .withAttributeEquals(MovieAttribute.NAME, "/Series/i")
            .withAttributeLessThan(MovieAttribute.BUDGET_IN_MILLIONS, 600)
            .withAttributeGreaterThanOrEqualTo(MovieAttribute.RUNTIME_IN_MINUTES, 90)
            .withLimit(10),
        new Callback<MovieResponse>() {
          @Override
          public void onSuccess(int status, MovieResponse response) {
            System.out.println(response.getMovies().get(0).getName());
          }

          @Override
          public void onFailure(int status) {
            System.out.println("Server responded with status: " + status);
          }

          @Override
          public void onError(Throwable error) {
            System.out.println("Failed to get movie data: " + error.getMessage());
          }
        });

    System.out.println("***** EXIT: Asynchronous invocation *****");
  }
}
